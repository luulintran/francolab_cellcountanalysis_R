"0","stats_test <- function(data_df, marker_col) {"
"0","  # Ensure the variable is numeric"
"0","  variable_data <- data[[ marker_col ]]"
"0","  if (!is.numeric(variable_data)) {"
"0","    stop(""The specified variable is not numeric."")"
"0","  }"
"0","  "
"0","  # Split data by treatment group"
"0","  ctrl_data <- variable_data[data$treatment == ""pcig""] # change group name if needed"
"0","  mut_data <- variable_data[data$treatment == ""dnrbpj""] # change group name if needed"
"0",""
"0","  # Check if the subsetting worked correctly"
"0","  if (length(ctrl_data) == 0 | length(mut_data) == 0) {"
"0","    stop(""No data found for one of the groups."")"
"0","  }"
"0",""
"0","  # Test for normality (Shapiro-Wilk test)"
"0","  shapiro_ctrl <- shapiro.test(ctrl_data)"
"0","  shapiro_mut <- shapiro.test(mut_data)"
"0",""
"0","  # Print normality test results"
"0","  print(paste(""Shapiro test for CTRL: p-value ="", shapiro_ctrl$p.value))"
"0","  print(paste(""Shapiro test for MUTANT: p-value ="", shapiro_mut$p.value))"
"0",""
"0","  # Test for equality of variances (Levene's test)"
"0","  levene_test <- leveneTest(variable_data ~ data$treatment)"
"0",""
"0","  # Print Levene's test result"
"0","  print(paste(""Levene test p-value ="", levene_test$`Pr(>F)`[1]))"
"0","  # Determine which statistical test to use based on normality and variance"
"0","  if (shapiro_ctrl$p.value > 0.05 && shapiro_mut$p.value > 0.05) { # Normal distribution"
"0","    if (levene_test$`Pr(>F)`[1] > 0.05) { # Equal variances"
"0","      test_result <- t.test(ctrl_data, mut_data, var.equal = TRUE) # Student's t-test"
"0","      test_used <- ""Student's t-test"""
"0","    } else { # Unequal variances"
"0","      test_result <- t.test(ctrl_data, mut_data, var.equal = FALSE) # Welch's t-test"
"0","      test_used <- ""Welch's t-test"""
"0","    }"
"0","  } else { # Non-normal distribution"
"0","    test_result <- wilcox.test(ctrl_data, mut_data) # Wilcoxon rank-sum test"
"0","    test_used <- ""Wilcoxon rank-sum test"""
"0","  }"
"0",""
"0","  # Return the results"
"0","  stats_test_result <- list("
"0","    Test_Used = test_used,"
"0","    Test_Result = test_result,"
"0","    Mean_CTRL = mean(ctrl_data),"
"0","    Mean_MUT = mean(mut_data)"
"0","  )"
"0",""
"0","  # Print results"
"0","  print(stats_test_result)"
"0","  "
"0","  return(stats_test_result)"
"0","}"
