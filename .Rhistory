annotate("text", x = 2.5, y = max(data_marker[[marker_col]]) + 2,
label = paste(test_used, "\n", format(p_value, digits = 3)),
size = 3, hjust = 0.5)
return(barplot)
}
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2,
data.olig2,
treatment_col = "treatment",
marker_col = "olig2",
title = "% OLIG2+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_test_results$Test_Used,
p_value = olig2_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_barplot_4groups)
filename = "results/4groups_results/ascl1-nicd-dnrbpj_olig2_barplot.pdf"
pdf(filename, width = 5, height = 5)
print(olig2_barplot_4groups)
dev.off()
posthoc_tukey_test <- function(marker_col, data_df) {
# Remove rows with NA values in either 'marker_col' or 'treatment' columns
data_clean <- na.omit(data_df[, c(marker_col, "treatment")])
# one-way ANOVA
model <- aov(as.formula(paste(marker_col, "~ treatment")), data = data_clean)
# Make ANOVA model
summary_posthoc <- summary(model)
# Extract ANOVA p-value from model above
anova_p_value <- summary_posthoc[[1]]$`Pr(>F)`[1]
# Perform Tukey HSD test for pairwise comparisons
tukey_results <- TukeyHSD(model, conf.level = 0.95)
# Extract p-values from Tukey results
p_values <- tukey_results$treatment[,"p adj"]
# Format p-values in scientific notation
formatted_p_values <- format(p_values, scientific = TRUE)
# Return significant p-values with 10 digits precision
significant_p_values <- signif(p_values, digits = 10)
# Plot Tukey HSD results
plot(tukey_results, las = 2)
# Return p-values and summary of Tukey HSD in a list
return(list("Tukey_P_Values" = significant_p_values, "Tukey_Summary" = tukey_results, "ANOVA_pvalue" = anova_p_value))
}
olig2_pdgfra_posthoctukey_results <- posthoc_tukey_test("olig2_pdgfra", data.olig2.pdgfra)
# Access the p-values
print(olig2_pdgfra_posthoctukey_results$Tukey_P_Values)
# Access the summary of Tukey HSD results
print(olig2_pdgfra_posthoctukey_results$Tukey_Summary)
olig2_posthoctukey_results <- posthoc_tukey_test("olig2", data.olig2)
# Access the p-values
print(olig2_posthoctukey_results$Tukey_P_Values)
# Access the summary of Tukey HSD results
print(olig2_posthoctukey_results$Tukey_Summary)
print(olig2_posthoctukey_results$ANOVA_pvalue)
olig2_pdgfra_posthoctukey_results <- posthoc_tukey_test("olig2_pdgfra", data.olig2.pdgfra)
# Access the p-values
print(olig2_pdgfra_posthoctukey_results$Tukey_P_Values)
# Access the summary of Tukey HSD results
print(olig2_pdgfra_posthoctukey_results$Tukey_Summary)
print(olig2_pdgfra_posthoctukey_results$ANOVA_pvalue)
# This function allows us to replace the dataframe containing the marker cell counts, and the title. Be sure to add the stats info. See example in ### Call function
create_barplot_4_groups <- function(data_summ,
data_marker,
treatment_col = "treatment",
marker_col = "marker",
title = "Title",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = test_used,
p_value = p_value,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f')) {
# Function to format y-axis
scaleFUN <- function(x) sprintf("%.1f", x)
# Creating the plot
barplot <- ggplot(data_summ,
aes(x = !!sym(treatment_col),
y = mean_cells)) +
geom_col(width = 0.5,
aes(fill = !!sym(treatment_col)),
color = 'black',
size = 0.25) +
geom_errorbar(aes(ymin = mean_cells - SE_cells,
ymax = mean_cells + SE_cells),
width = 0.3,
size = 0.25) +
geom_dotplot(data = data_marker,
aes(x = !!sym(treatment_col),
y = !!sym(marker_col),
fill = !!sym(treatment_col)),
binaxis = 'y',
stackdir = 'center',
dotsize = 0.7,
binwidth = 0.7,
show.legend = FALSE) +
theme_classic(base_size = 10) +
ylab("% of EP'd cells") +
scale_x_discrete(limits = positions) +
theme(
panel.background = element_blank(),
panel.grid = element_blank(),
axis.line = element_line(size = 0.25,
color = rgb(0, 0, 0, max = 255)),
axis.text.x = element_text(colour = 'black', angle = 45, hjust = 1),
axis.text.y = element_text(hjust = 1, colour = 'black'),
axis.title.x = element_blank(),
aspect.ratio = 2 / 1,
legend.key.size = unit(0.7, "line"),
text = element_text(size = 10),
plot.title = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 0), labels = scaleFUN, limits= c(0,max(data_marker[[marker_col]]) +5)) +
scale_fill_manual(values = fill_colors,
name = "",
labels = positions) +
ggtitle(title) +
theme(legend.position = "none") +
annotate("text", x = 2.5, y = max(data_marker[[marker_col]]) + 2,
label = paste(test_used, "\n", format(p_value, digits = 3)),
size = 3, hjust = 0.5)
return(barplot)
}
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_pdgfra_barplot)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_pdgfra_barplot_4groups)
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2,
data.olig2,
treatment_col = "treatment",
marker_col = "olig2",
title = "% OLIG2+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_test_results$Test_Used,
p_value = olig2_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_barplot_4groups)
filename = "results/4groups_results/ascl1-nicd-dnrbpj_olig2_pdgfra_barplot.pdf"
pdf(filename, width = 5, height = 5)
print(olig2_pdgfra_barplot_4groups)
dev.off()
# This function allows us to replace the dataframe containing the marker cell counts, and the title. Be sure to add the stats info. See example in ### Call function
create_barplot_4_groups <- function(data_summ,
data_marker,
treatment_col = "treatment",
marker_col = "marker",
title = "Title",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = test_used,
p_value = p_value,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f')) {
# Function to format y-axis
scaleFUN <- function(x) sprintf("%.1f", x)
# Fixed dotsize and binwidth
dotsize_value <- 0.7
binwidth_value <- 0.7
# Creating the plot
barplot <- ggplot(data_summ,
aes(x = !!sym(treatment_col),
y = mean_cells)) +
geom_col(width = 0.5,
aes(fill = !!sym(treatment_col)),
color = 'black',
size = 0.25) +
geom_errorbar(aes(ymin = mean_cells - SE_cells,
ymax = mean_cells + SE_cells),
width = 0.3,
size = 0.25) +
geom_dotplot(data = data_marker,
aes(x = !!sym(treatment_col),
y = !!sym(marker_col),
fill = !!sym(treatment_col)),
binaxis = 'y',
stackdir = 'center',
dotsize = dotsize_value,
binwidth = binwidth_value,
show.legend = FALSE) +
theme_classic(base_size = 10) +
ylab("% of EP'd cells") +
scale_x_discrete(limits = positions) +
theme(
panel.background = element_blank(),
panel.grid = element_blank(),
axis.line = element_line(size = 0.25,
color = rgb(0, 0, 0, max = 255)),
axis.text.x = element_text(colour = 'black', angle = 45, hjust = 1),
axis.text.y = element_text(hjust = 1, colour = 'black'),
axis.title.x = element_blank(),
aspect.ratio = 2 / 1,
legend.key.size = unit(0.7, "line"),
text = element_text(size = 10),
plot.title = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 0), labels = scaleFUN, limits= c(0,max(data_marker[[marker_col]]) +5)) +
scale_fill_manual(values = fill_colors,
name = "",
labels = positions) +
ggtitle(title) +
theme(legend.position = "none") +
annotate("text", x = 2.5, y = max(data_marker[[marker_col]]) + 2,
label = paste(test_used, "\n", format(p_value, digits = 3)),
size = 3, hjust = 0.5)
return(barplot)
}
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2,
data.olig2,
treatment_col = "treatment",
marker_col = "olig2",
title = "% OLIG2+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_test_results$Test_Used,
p_value = olig2_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_pdgfra_barplot_4groups)
# This function allows us to replace the dataframe containing the marker cell counts, and the title. Be sure to add the stats info. See example in ### Call function
create_barplot_4_groups <- function(data_summ,
data_marker,
treatment_col = "treatment",
marker_col = "marker",
title = "Title",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = test_used,
p_value = p_value,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f')) {
# Function to format y-axis
scaleFUN <- function(x) sprintf("%.1f", x)
# Fixed dotsize and binwidth
dotsize_value <- 0.7
binwidth_value <- 0.7
# Calculate max value of the marker column for consistent y-axis scaling
max_marker_value <- max(data_marker[[marker_col]], na.rm = TRUE) + 5
# Creating the plot
barplot <- ggplot(data_summ,
aes(x = !!sym(treatment_col),
y = mean_cells)) +
geom_col(width = 0.5,
aes(fill = !!sym(treatment_col)),
color = 'black',
size = 0.25) +
geom_errorbar(aes(ymin = mean_cells - SE_cells,
ymax = mean_cells + SE_cells),
width = 0.3,
size = 0.25) +
geom_dotplot(data = data_marker,
aes(x = !!sym(treatment_col),
y = !!sym(marker_col),
fill = !!sym(treatment_col)),
binaxis = 'y',
stackdir = 'center',
dotsize = dotsize_value,
binwidth = binwidth_value,
show.legend = FALSE) +
theme_classic(base_size = 10) +
ylab("% of EP'd cells") +
scale_x_discrete(limits = positions) +
theme(
panel.background = element_blank(),
panel.grid = element_blank(),
axis.line = element_line(size = 0.25,
color = rgb(0, 0, 0, max = 255)),
axis.text.x = element_text(colour = 'black', angle = 45, hjust = 1),
axis.text.y = element_text(hjust = 1, colour = 'black'),
axis.title.x = element_blank(),
aspect.ratio = 2 / 1,
legend.key.size = unit(0.7, "line"),
text = element_text(size = 10),
plot.title = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 0), labels = scaleFUN, limits= c(0,max_marker_value)) +
scale_fill_manual(values = fill_colors,
name = "",
labels = positions) +
ggtitle(title) +
theme(legend.position = "none") +
annotate("text", x = 2.5, y = max(data_marker[[marker_col]]) + 2,
label = paste(test_used, "\n", format(p_value, digits = 3)),
size = 3, hjust = 0.5)
return(barplot)
}
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2,
data.olig2,
treatment_col = "treatment",
marker_col = "olig2",
title = "% OLIG2+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_test_results$Test_Used,
p_value = olig2_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'))
# Display the plot
print(olig2_pdgfra_barplot_4groups)
# This function allows us to replace the dataframe containing the marker cell counts, and the title. Be sure to add the stats info. See example in ### Call function
create_barplot_4_groups <- function(data_summ,
data_marker,
treatment_col = "treatment",
marker_col = "marker",
title = "Title",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used,
p_value,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value,
binwidth_value) {
# Function to format y-axis
scaleFUN <- function(x) sprintf("%.1f", x)
# Calculate max value of the marker column for consistent y-axis scaling
max_marker_value <- max(data_marker[[marker_col]], na.rm = TRUE) + 5
# Creating the plot
barplot <- ggplot(data_summ,
aes(x = !!sym(treatment_col),
y = mean_cells)) +
geom_col(width = 0.5,
aes(fill = !!sym(treatment_col)),
color = 'black',
size = 0.25) +
geom_errorbar(aes(ymin = mean_cells - SE_cells,
ymax = mean_cells + SE_cells),
width = 0.3,
size = 0.25) +
geom_dotplot(data = data_marker,
aes(x = !!sym(treatment_col),
y = !!sym(marker_col),
fill = !!sym(treatment_col)),
binaxis = 'y',
stackdir = 'center',
dotsize = dotsize_value,
binwidth = binwidth_value,
show.legend = FALSE) +
theme_classic(base_size = 10) +
ylab("% of EP'd cells") +
scale_x_discrete(limits = positions) +
theme(
panel.background = element_blank(),
panel.grid = element_blank(),
axis.line = element_line(size = 0.25,
color = rgb(0, 0, 0, max = 255)),
axis.text.x = element_text(colour = 'black', angle = 45, hjust = 1),
axis.text.y = element_text(hjust = 1, colour = 'black'),
axis.title.x = element_blank(),
aspect.ratio = 2 / 1,
legend.key.size = unit(0.7, "line"),
text = element_text(size = 10),
plot.title = element_text(size = 10)) +
scale_y_continuous(expand = c(0, 0), labels = scaleFUN, limits= c(0,max_marker_value)) +
scale_fill_manual(values = fill_colors,
name = "",
labels = positions) +
ggtitle(title) +
theme(legend.position = "none") +
annotate("text", x = 2.5, y = max(data_marker[[marker_col]]) + 2,
label = paste(test_used, "\n", format(p_value, digits = 3)),
size = 3, hjust = 0.5)
return(barplot)
}
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2,
data.olig2,
treatment_col = "treatment",
marker_col = "olig2",
title = "% OLIG2+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_test_results$Test_Used,
p_value = olig2_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f',),
dotsize_value = 0.7,
binwidth_value = 0.7)
olig2_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2,
data.olig2,
treatment_col = "treatment",
marker_col = "olig2",
title = "% OLIG2+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_test_results$Test_Used,
p_value = olig2_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 0.7,
binwidth_value = 0.7)
# Display the plot
print(olig2_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 0.7
binwidth_value = 1)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 0.7,
binwidth_value = 1)
# Display the plot
print(olig2_pdgfra_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 0.7,
binwidth_value = 0.1)
# Display the plot
print(olig2_pdgfra_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 1,
binwidth_value = 0.1)
# Display the plot
print(olig2_pdgfra_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 1,
binwidth_value = 0.7)
# Display the plot
print(olig2_pdgfra_barplot_4groups)
olig2_pdgfra_barplot_4groups <- create_barplot_4_groups (
data_summ_olig2_pdgfra,
data.olig2.pdgfra,
treatment_col = "treatment",
marker_col = "olig2_pdgfra",
title = "% OLIG2+ PDGFRA+ Cells",
positions = c("pcig", "ascl1", "nicd_ascl1", "dnrbpj_ascl1"),
test_used = olig2_pdgfra_test_results$Test_Used,
p_value = olig2_pdgfra_posthoctukey_results$ANOVA_pvalue,
fill_colors = c('#bcbcbc', '#f4bfbd', '#e590a0', '#c4586f'),
dotsize_value = 0.3,
binwidth_value = 0.7)
# Display the plot
print(olig2_pdgfra_barplot_4groups)
filename = "results/4groups_results/ascl1-nicd-dnrbpj_olig2_pdgfra_barplot.pdf"
pdf(filename, width = 5, height = 5)
print(olig2_pdgfra_barplot_4groups)
dev.off()
data <-
read.csv(
"data/4groups_data/2023-05-01_cd_e15-18_dnrbpj-ascl1-nicd_olig2_pdgfra.csv"
)
